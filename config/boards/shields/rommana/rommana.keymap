/*
 * Copyright (c) 2021 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define def 0
#define a_left 1
#define a_right 2
#define num 3
#define n_left 4
#define n_right 5
#define nav 6
#define sys 7

// &kscan0 {
//     debounce-period = <16>;
// };

&lt {
    flavor = "balanced";
    tapping-term-ms = <1024>;
};

&mt {
    flavor = "balanced";
    tapping-term-ms = <1024>;
};

/ {
    behaviors {
        mo_to: behavior_mo_tog {
            compatible = "zmk,behavior-hold-tap";
            label = "mo_to";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <1024>;
            bindings = <&mo>, <&to>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        def {
            bindings = <
&trans                                  &kp L       &kp H           &kp W
&trans &trans                                                                           &kp P          &kp U        &kp O
&trans                 &mt LALT S     &mt LCTRL R   &mt LSHFT N    &mt LGUI T
&trans &trans                                                                      &mt RGUI D     &mt RSHFT E   &mt RCTRL A    &mt RALT I
&trans &trans &trans
&trans &trans &trans
                                     &lt nav SPACE    &mo_to a_right num         &mo a_left     &lt sys SPACE
                >;
        };

        a_right {
            bindings = <
&trans                                    &trans      &trans      &trans
&trans &trans                                                                      &kp Q    &kp K    &kp Y
&trans                           &kp LALT     &kp LCTRL   &kp LSHFT    &kp LGUI
&trans &trans                                                                      &kp G     &kp X   &kp J    &trans
&trans &trans &trans
&trans &trans &trans
                                                    &trans      &trans             &trans   &trans
                >;
        };

        a_left {
            bindings = <
&trans                                      &kp F      &kp V      &kp Z
&trans &trans                                                                     &trans   &trans   &trans
&trans                            &trans    &kp C   &kp B    &kp M
&trans &trans                                                                     &kp RGUI     &kp RSHFT   &kp RCTRL    &kp RALT
&trans &trans &trans
&trans &trans &trans
                                                    &trans      &trans           &trans  &trans
                >;
        };

        num {
            bindings = <
&trans                                        &kp N1         &kp N2      &kp N3
&trans &trans                                                                          &kp N6         &kp N5        &kp N4
&trans                 &mt LALT SLASH    &mt LCTRL N7   &mt LSHFT N8    &mt LGUI COMMA
&trans &trans                                                                         &mt RGUI DOT   &mt RSHFT N0  &mt RCTRL N9   &mt RALT SEMI
&trans &trans &trans
&trans &trans &trans
                                                      &trans   &mo n_right           &mo_to n_left left  &trans
                >;
        };

        n_right {
            bindings = <
&trans                                        &trans    &trans        &trans
&trans &trans                                                                          &trans    &trans       &trans
&trans                         &kp LALT     &kp LCTRL   &kp LSHFT    &kp LGUI
&trans &trans                                                                          &kp SQT    &kp RBKT     &kp LBKT      &trans
&trans &trans &trans
&trans &trans &trans
                                                      &trans   &trans            &trans  &trans
                >;
        };

        n_left {
            bindings = <
&trans                                    &trans         &trans        &trans
&trans &trans                                                                          &trans    &trans      &trans
&trans                         &kp BSLH   &kp MINUS     &kp EQUAL     &kp GRAVE
&trans &trans                                                                          &kp RGUI     &kp RSHFT   &kp RCTRL    &kp RALT
&trans &trans &trans
&trans &trans &trans
                                                      &trans   &trans            &trans  &trans
                >;
        };

        nav {
            bindings = <
&trans                          &bt BT_SEL 0   &bt BT_NXT     &bt BT_CLR
&trans &trans                                                                &kp PG_UP      &kp UP         &kp PG_DN
&trans                &kp LALT    &kp LCTRL      &kp LSHFT      &kp LGUI
&trans &trans                                                                &kp LEFT       &kp DOWN       &kp RIGHT      &trans
&trans &trans &trans
&trans &trans &trans
                                           &trans      &trans                 &kp RET     &kp BSPC
                >;
        };

        sys {
            bindings = <
&trans                        &trans      &trans          &trans
&trans &trans                                                                    &kp HOME   &kp INS  &kp C_VOL_UP
&trans              &trans     &trans      &trans          &trans
&trans &trans                                                                    &kp END    &kp DEL  &kp C_VOL_DN  &kp C_MUTE
&trans &trans &trans
&trans &trans &trans
                                             &kp TAB     &kp ESC                &trans   &trans
                >;
        };

     };
};

